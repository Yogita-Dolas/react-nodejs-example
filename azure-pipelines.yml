# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: ubuntu-latest
  
steps:
- task: Docker@2
  inputs:
    containerRegistry: 'ArgonDocker_SC'
    repository: 'ArgonReactJSRepo'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'

- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true


- upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
  artifact: drop

- task: KubernetesManifest@0
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: 'React_AKS_SC'
    namespace: 'default'
    manifests: 'apiVersion: apps/v1 kind: Deployment metadata:   creationTimestamp: null   labels:     app: react-webapp   name: react-webapp spec:   replicas: 5   selector:     matchLabels:       app: react-webapp   strategy: {}   template:     metadata:       creationTimestamp: null       labels:         app: react-webapp     spec:       containers:       - image: reactdockerimages.azurecr.io/argonreactjsrepo:22         name: webapp         imagePullPolicy: Always         resources: {}         ports:           - containerPort: 3080  status: {}   ---   apiVersion: v1 kind: Service metadata:   name: react-webapp   labels:     run: react-webapp spec:   ports:   - port: 3080     protocol: TCP   selector:     app: react-webapp   type: LoadBalancer'